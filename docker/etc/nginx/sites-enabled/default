server {
  listen 80 default_server;
  listen [::]:80 default_server ipv6only=on;

  #_SSL_#listen 443 ssl default_server;
  #_SSL_#listen [::]:443 ssl default_server ipv6only=on;
  #_SSL_#ssl_certificate /etc/nginx/ssl/nginx.crt;
  #_SSL_#ssl_certificate_key /etc/nginx/ssl/nginx.key;
  #_SSL_#include /etc/nginx/ssl/options.conf;

  error_page 404 = @notfound;

  location = / {
    add_header 'Content-Type' 'text/plain' always;
    include cors.conf;
    return 200 'ok';
  }

  location = /favicon.ico {
    return 204;
  }

  location /api {
    if ($request_method = 'OPTIONS') {
      include cors.conf;
      add_header 'Access-Control-Max-Age' 86400;
      return 204;
    }

    if ($http_authorization = '') {
      include cors.conf;
      add_header 'Content-Type' 'application/json' always;
      return 401 '{"error":"Unauthorized","message":"token required"}';
    }

    if ($http_authorization != 'Bearer %AUTH_TOKEN%') {
      include cors.conf;
      add_header 'Content-Type' 'application/json' always;
      return 401 '{"error":"Unauthorized","message":"invalid token"}';
    }

    include cors.conf;
    rewrite ^/api/(.*) /$1 break;

    proxy_http_version 1.1;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Upgrade $http_upgrade;
    proxy_pass http://localhost:3000;
  }

  location = /ws {
    if ($http_upgrade = '') {
      include cors.conf;
      return 426;
    }

    proxy_http_version 1.1;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Upgrade $http_upgrade;
    proxy_pass http://localhost:3000;
  }

  location = /obs {
    if ($http_upgrade = '') {
      include cors.conf;
      return 426;
    }

    proxy_http_version 1.1;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Upgrade $http_upgrade;
    proxy_pass http://localhost:4444;
  }

  location = /vnc {
    if ($http_upgrade = '') {
      include cors.conf;
      return 426;
    }

    proxy_http_version 1.1;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Upgrade $http_upgrade;
    proxy_pass http://localhost:5900;
  }

  location @notfound {
    add_header 'Content-Type' 'application/json' always;
    include cors.conf;
    return 404 '{}';
  }
}
